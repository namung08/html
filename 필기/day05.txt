1. link와 import
 - 외부로 css파일을 빼는 방법은 2가지
 - <link rel="stylesheet" href="style.css">
 - <style> @import url("style.css") </style>
 - 재사용성을 높이고, 소스코드가 간단해서 유지보수의 편의성을 높인다

2. 캐시
 - cache : 자주 접근하는 데이터를 복사해놓는 임시 저장소
 - browser cache : 서버 지연을 줄이기 위해 사용하는 웹 캐시의 일종

 2-1. 웹캐쉬
  - WEB Cache 
	-> 사용자가(client)가 웹사이트(server)에 접속할 때, 
	정적 컨텐츠(이미지, js, css 등)를 특정위치에 저장하여 ,
  	웹 사이트 서버에 해당 컨텐츠를 매번 요청하여 받는 것이 
	아니라, 특정 위치에서 불러옴으로써 사이트 응답시간을
	줄이고, 서버 트래픽 감소 효과를 볼 수 있다. 

  - Browser Cache
	-> 브라우저 또는 HTTP요청을 하는 Client Application에 의해
	내부 디스크에 캐쉬
	-> 브라우저의 Back버튼 또는 이미 방문한 페이지를 재 방문하는
	경우 극대화 

  - Proxy Cache
	-> Browser Cache와 동일한 원리로 동작하며, Client나 Server가
	아닌 네트워크 상에서 동작
	-> 큰 회사나 IPS의 방화벽에 설치되며 대기시간&트래픽 감소,
	접근정책&제한우회, 사용률 기록등 수행

  - Gateway Cache
	-> 서버 앞 단에 설치되어 요청에 대한 캐쉬 및 효율적인
	분배를 통해 가용성, 신뢰성, 성능등을 향상
-----------------------------------------------------------------------------
1. 바닐라스크립츠(Vanilla JS)란
  - 바닐라 자바스크립트란 플러그인이나, 라이브러리를 사용하지
  않은 순수 자바스크립트를 이야기한다.
  - 즉, 바닐라 스크립트 = 자바스크립트 라고 생각하면 된다. 

2. javascript에 영향을 준 언어
 - java : 기본적인 문법
 - scheme
 - self

3. Javascript 버전
 - ECMA
 - ECMAJavaScript : 자바스크립트 언어의 표준
 - ES1, ES2, ... , ES6

4. 변수선언
 4-1. 변수의 선언
  - 선언은 var  키워드 뒤에 사용하고자 하는 변수의 이름을 지정하고,
  세미콜론으로 한 라인을 종료

	var num;
	var username;

 4-2. 변수의 할당
  - 선언된 변수에 원하는 값을 대입하는 과정

	num = 12345;
	user_name = '홍길동';
	userName = "이순신";

 4-3. 변수선언의 제약
  - 변수는 반복되어 다른 값이 할당될 수 있지만, 선언은 중복할 수 
  없다.

	var num = 12345;
	num = 78910;
	var num = 1;	// 이미 선언된 변수이므로 불가

	myage = 19;	// 선언되지 않은 변수 사용 불가

 4-4. 변수의 종류
  - javascript의 변수는 표현하는 값의 종류에 따라서 형식이 구분된다
  - 이러한 변수의 종류를 데이터형(=datatype)이라고 한다.
 
  - Number : 숫자를 표현한다. 
  - String : 문자열선언, 쌍따옴표나 홑따옴표로 감싸진 문자을 의미한다
  - Boolean : true,false 값을 가지는 논리 데이터 타입
  - Null : 값 없음, 개발자가 의도적으로 변수의 공간을 비워놓은 상태
  - Object : 객체를 저장하기 위한 데이터 타입이다. 브라우저 제어 기능,
		form제어, HTML 태그 요소에 대한 제어 등이 가능하다. 
  - undefined : 정의되지 않음. 처음부터 변수가 선언되고 값도 
		할당되지 않은 상태를 의미한다. 이 상태의 변수는 어떠한
		처리도 불가능하다. 

5. Null값과 undefied의 차이
 - 프로그램 언어 java와 javascript에서 변수의 선언 차이
	java  -> 변수를 선언시에 자료형이 결정된다.
	javascript ->  변수의 선언시에는 변수의 존재여부와 스코프(범위)
	만 결정되고 자료형을 값을 할당할 때 자동으로 결정 된다.

 - 할당되지 않은 값의 상태
	java -> 객체의 경우 null, 숫자 형태의 경우 0, boolean은 false를
	기본으로 값이 할당된다
	javascript -> 자료형이 결정되지 않은 상태이기 때문에 기본값이
	할당될 수 없다. 무조건 undefined로 할당된다

5. 연산자
 - 대입 연산자
 - 사칙 연산자
 - 단항 연산자
 - 증감 연산자
 - 비교 연산자
 - 논리 연산자

 5-1. 증감 연산자
  - 	x = x + 1;
	x += 1;
	x++;
	++x;

 - 	x = x - 1;
	x -= 1;
	x--;
	--x;

 5-2. 비교연산자
  - ==
  - 프로그래밍에서 비교란 주어진 값들이 같은지, 다른지, 
  큰지, 작은지를 구분하는 것을 의미한다.
 - ===(일치연산자)
 - 일치연산자로, 좌항과 우항이 '정확','엄격'하게 같을때
  true, 다르면 false가 된다. 
 - != (부정)
 - 같지 않다라는 뜻
 - !==
 - 정확하게 같지 않다는 의미.

6. document.wirte(출력내용)
 - HTML페이지의 <body>태그 안을 javascript에서는 
 document(=문서)라고 부른다.
 - <body>태그안에 새로운 내용을 출력하고자 할 경우 
 자바스크립트에게 "쓰다"라는 명령어 write를 전달한다.

	document.write("출력할 내용");

 - 출력되는 내용은 기존에 존재하던 <body>태그 안의 모든
 내용을 지우고 새롭게 작성된다
 - HTML태그안에 출력되는 내용이므로, 다른 HTML태그를
 포함하여 출력할 수 있다. 

	document.write("<h1>내용</h1>");

7. 조건문
 - if(조건식)문
 - if~else문
 - if~else if~else문
 - switch문